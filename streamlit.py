import streamlit as st
import os
from PIL import Image
from torchvision import transforms
from torchvision import datasets
import torch
from torch import nn
import io

from app.packet_processing import packet_app
from app.showcase import alone_app

def app():
    st.markdown('# FotolovushkaAI')
    st.markdown('## –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–Ω–∏–º–∫–∞')
    uploaded_file = st.file_uploader("Upload your file here...", type=['png', 'jpeg', 'jpg'])
    if uploaded_file is not None:
        # Process demo case for one image
        # show_boundaries = False
        # if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ —Å–Ω–∏–º–∫–µ'):
        #     show_boundaries = True
        alone_app(uploaded_file, True)

    container = st.container()
    container.markdown("## –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
    container.markdown("–í –¥–∞–Ω–Ω–æ–º –±–ª–æ–∫–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–Ω–∏–º–∫–∏ –∏–∑ –ø–∞–ø–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.")
    container.warning("–í–Ω–∏–º–∞–Ω–∏–µ: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã - jpg, jpeg, png, JPG, JPEG, PNG", icon="‚ö†Ô∏è")
    load_path = container.text_input("–£–∫–∞–∂–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Å–Ω–∏–º–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ")
    save_path = container.text_input("–£–∫–∞–∂–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ª–æ–∂–∏—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–Ω–∏–º–∫–∏")
    button_clicked = container.button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
    save_csv = False
    if container.checkbox('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ .csv —Ñ–∞–π–ª'):
        save_csv = True
    if button_clicked:
        if os.path.isdir(load_path) and os.path.isdir(save_path):
            result_dataframe = packet_app(load_path, save_path)
            if save_csv:
                result_dataframe = result_dataframe.to_csv(index=False).encode('utf-8')
                st.download_button(
                    label='–°–∫–∞—á–∞—Ç—å .csv —Ñ–∞–π–ª',
                    data=result_dataframe,
                    file_name='submission.csv'
                )
        else:
            st.error('–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å', icon="üö®")

if __name__ == '__main__':
    app()